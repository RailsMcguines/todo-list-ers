{"version":3,"sources":["components/ToDoList/ToDoList.jsx","assets/imgs/techprof.png","App.js","reportWebVitals.js","index.js"],"names":["filtredData","ToDoList","props","state","inputValue","namsur","tech","spe","city","tasks","this","task","push","setState","document","querySelector","selected","event","target","name","value","e","item","filter","items","className","class","onChange","handleInput","type","placeholder","aria-label","id","onClick","handleSelect","addHandle","map","campo","index","deleteItem","React","Component","App","src","techprof","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.113ce934.chunk.js","sourcesContent":["import React from 'react'\r\nimport './css/ToDoList.css'\r\n\r\nvar filtredData\r\n\r\nexport class ToDoList extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.props=props;\r\n        this.state={\r\n        inputValue:\"\",\r\n        namsur:\"\",\r\n        tech:\"\",\r\n        spe:\"\",\r\n        city:\"\",\r\n        tasks:[]\r\n       }\r\n    }\r\n    // Método que comprueba y agrega un nuevo item\r\n    addHandle(){\r\n        if(this.state.namsur!==\"\" && this.state.tech!==\"\" && this.state.spe!==\"\" && this.state.city!==\"\"){\r\n           \r\n            let task=[];\r\n            task.push(this.state.namsur);\r\n            task.push(this.state.spe);\r\n            task.push(this.state.tech);\r\n            task.push(this.state.city);\r\n\r\n            this.setState({\r\n                tasks:[...this.state.tasks,task],            \r\n            })\r\n\r\n            this.setState({\r\n                namsur:\"\",\r\n                spe:\"\",\r\n                tech:\"\",\r\n                city:\"\"\r\n            })\r\n        \r\n        let op=\"op\"\r\n        document.querySelector('#spe [value=\"' + op + '\"]').selected = true; \r\n        }else{\r\n            return;\r\n        }\r\n    }\r\n    // Método que agrega según campo input\r\n    handleInput(event){       \r\n        switch(event.target.name) {\r\n            case \"namsur\":\r\n                this.setState({\r\n                    namsur: event.target.value,   \r\n                })\r\n            break;\r\n            case \"tech\":\r\n                this.setState({\r\n                    tech: event.target.value,   \r\n                })\r\n            break;\r\n            case \"spe\":\r\n                this.setState({\r\n                    spe: event.target.value,   \r\n                })\r\n            break;\r\n            case \"city\":\r\n                this.setState({\r\n                    city: event.target.value,   \r\n                })\r\n                break;\r\n            default:    \r\n        } \r\n    }\r\n    // Método que agrega según la opción select\r\n    handleSelect(e){\r\n        if(e.target.value!==\"op\"){ // Mientras sea distinto de la opción \"Elige una opción\"\r\n            this.setState({\r\n                spe: e.target.value,   \r\n            })   \r\n        }\r\n    }  \r\n    // Método que elimina un item\r\n    deleteItem(item){   \r\n        filtredData = this.state.tasks.filter((items)=>{\r\n            return items !== item\r\n        })  \r\n        this.setState({\r\n            tasks:filtredData\r\n        })    \r\n    }\r\n    render(){\r\n        return(\r\n            <>           \r\n            <div className=\"container\">\r\n                <div className=\"row mb-1\">\r\n                    <div className=\"col-3\">\r\n                        Name and Surname\r\n                    </div>\r\n                    <div class=\"col-9\">\r\n                        <input value={this.state.namsur} name=\"namsur\" onChange={(e)=>this.handleInput(e)} className=\"form-control\" type=\"text\" placeholder=\"Enter Name\" aria-label=\"default input example\"></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mb-1\">\r\n                    <div className=\"col-3\">\r\n                        Specialty\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                    <select name=\"spe\" id=\"spe\" className=\"form-select\" aria-label=\"Default select example\" onClick={(e)=>this.handleSelect(e)}>\r\n                    <option value=\"op\" selected>Elige una opción</option>\r\n                    <option value=\"Software development (Desktop)\">Software developement (Desktop)</option>\r\n                    <option value=\"Software development\">Software developement</option>\r\n                    <option value=\"Web development (Frontend)\">Web developement (Frontend)</option>\r\n                    <option value=\"Web development (Backend)\">Web developement (Backend)</option>\r\n                    <option value=\"Web development (FullStack)\">Web developement (FullStack)</option>\r\n                    <option value=\"Software development (Mobile)\">Software developement (Mobile)</option>\r\n                    <option value=\"Software developement (VideoGames)\">Software developement (VideoGames)</option>\r\n                    <option value=\"Data Base Administration\">Data Base Administration</option>\r\n                    <option value=\"Software Engineering\">Sotware Engineering</option>\r\n                    <option value=\"IT Securty\">IT Securty</option>\r\n                    <option value=\"DevOps Engineering\">DevOps Engineering</option>\r\n                    <option value=\"System Administration\">System Administration</option>\r\n                    </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mb-1\">\r\n                    <div className=\"col-3\">\r\n                        Main Technology\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                    <input value={this.state.tech} id=\"esp\" name=\"tech\" onChange={(e)=>this.handleInput(e)} className=\"form-control\" type=\"text\" placeholder=\"Enter main dev technolgy\" aria-label=\"default input example\"></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mb-2\">\r\n                    <div className=\"col-3\">\r\n                        City\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                    <input value={this.state.city} name=\"city\" onChange={(e)=>this.handleInput(e)} className=\"form-control\" type=\"text\" placeholder=\"Enter City\" aria-label=\"default input example\"></input>\r\n                    </div>\r\n                </div>\r\n            \r\n                </div>        \r\n                <div className=\"derecha\">\r\n                    <button className=\"btn btn-dark bg-dark btn-add mt-2 mb-4\" onClick={()=>this.addHandle()}>Agregar</button>\r\n                </div>\r\n\r\n                <div className=\"text-aligned\">\r\n              \r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nombre</th>\r\n                            <th>Especialidad</th>\r\n                            <th>Teconolgía</th>\r\n                            <th>Ciudad</th>\r\n                            <th>Operación</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody >\r\n                    { this.state.tasks.map((campo,index)=>{return <tr key={campo[0]}>    \r\n                            <td>{campo[0]}</td>\r\n                            <td>{campo[1]}</td>\r\n                            <td>{campo[2]}</td>\r\n                            <td>{campo[3]}</td>\r\n                            <td className=\"centro\"><button className=\"btn btn-danger btn-sm\" onClick={(e)=>this.deleteItem(campo)}>Eliminar</button></td>                         \r\n                        </tr>                 \r\n                    \r\n                     }) }\r\n                     </tbody>\r\n                </table>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/techprof.15ec9c40.png\";","import React from 'react'\nimport {ToDoList} from './components/ToDoList/ToDoList'\nimport './style.css'\nimport techprof from './assets/imgs/techprof.png'\n\nfunction App() {\n    return (\n      <div className=\"container\"> \n         <header className=\"row alto\">\n            <div className=\"col main-title\"><h1>IT profile register</h1></div>\n          </header>\n          <div className=\"row\">\n            <div className=\"col-1\">\n              \n            </div>   \n            <div className=\"col-9\">\n            <ToDoList />\n\n            </div>\n            <div className=\"col-2\">\n              <img className=\"tech\" src={techprof} alt=\"tech_profile\" />\n            </div>\n          </div>\n       \n          <nav className=\"navbar fixed-bottom\">\n            <p className=\"autor\">EnzoRodriguez@LocalhostXL - La Rioja 2021</p>\n          </nav>\n         \n         \n        </div>\n      \n      );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}